esphome:
  name: ${deviceid}
  friendly_name: ${devicename}
  includes:
    - lg-controller.h

esp32:
  board: esp32dev
  framework:
    type: arduino

uart:
  - id: ac_serial
    tx_pin: GPIO25
    rx_pin: GPIO26 # Keep in sync with RxPin in lg-controller.h
    baud_rate: 104

sensor:
  - id: temperature_sensor
    platform: homeassistant
    internal: true
    entity_id: ${temperature_sensor_entity_id}
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_sensors();
    sensors:
      - name: Error Code
  - platform: uptime
    name: Uptime

binary_sensor:
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_binary_sensors();
    binary_sensors:
      - name: Defrost
      - name: Preheat
      - name: Outdoor Unit

switch:
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_switches();
    switches:
      - name: Air Purifier
      - name: Internal Thermistor

select:
  - platform: template
    name: Airflow Up/Down
    id: vane_position
    optimistic: true
    icon: mdi:arrow-up-down
    options:
      - "0 (Default)"
      - "1 (Up)"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6 (Down)"
    on_value:
      - lambda: |-
          ((LgController*)id(${deviceid}))->set_vane_position(i);

climate:
  - platform: custom
    lambda: |-
      auto* controller = new LgController(id(ac_serial), id(temperature_sensor), id(vane_position));
      controller->installer_settings().over_heating = ${over_heating_installer_setting};
      App.register_component(controller);
      return {controller};
    climates:
      - name: ""
        id: ${deviceid}
