esphome:
  name: ${deviceid}
  friendly_name: ${devicename}
  includes:
    - lg-controller.h

esp32:
  board: esp32dev
  framework:
    type: arduino

uart:
  - id: ac_serial
    tx_pin: GPIO25
    rx_pin: GPIO26 # Keep in sync with RxPin in lg-controller.h
    baud_rate: 104

sensor:
  - id: temperature_sensor
    platform: homeassistant
    internal: true
    entity_id: ${temperature_sensor_entity_id}
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_sensors();
    sensors:
      - name: Error Code
      - name: Pipe Temperature In
      - name: Pipe Temperature Mid
      - name: Pipe Temperature Out
  - platform: uptime
    name: Uptime

binary_sensor:
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_binary_sensors();
    binary_sensors:
      - name: Defrost
      - name: Preheat
      - name: Outdoor Unit

switch:
  - platform: custom
    lambda: |-
      return ((LgController*)id(${deviceid}))->get_switches();
    switches:
      - name: Air Purifier
      - name: Internal Thermistor

select:
  - platform: template
    name: Airflow 1 Up/Down
    id: vane_position_1
    optimistic: true
    icon: mdi:arrow-up-down
    options:
      - "0 (Default)"
      - "1 (Up)"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6 (Down)"
    on_value:
      - lambda: |-
          ((LgController*)id(${deviceid}))->set_vane_position(1, i);
  - platform: template
    name: Airflow 2 Up/Down
    id: vane_position_2
    optimistic: true
    icon: mdi:arrow-up-down
    options:
      - "0 (Default)"
      - "1 (Up)"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6 (Down)"
    on_value:
      - lambda: |-
          ((LgController*)id(${deviceid}))->set_vane_position(2, i);
  - platform: template
    name: Airflow 3 Up/Down
    id: vane_position_3
    optimistic: true
    icon: mdi:arrow-up-down
    options:
      - "0 (Default)"
      - "1 (Up)"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6 (Down)"
    on_value:
      - lambda: |-
          ((LgController*)id(${deviceid}))->set_vane_position(3, i);
  - platform: template
    name: Airflow 4 Up/Down
    id: vane_position_4
    optimistic: true
    icon: mdi:arrow-up-down
    options:
      - "0 (Default)"
      - "1 (Up)"
      - "2"
      - "3"
      - "4"
      - "5"
      - "6 (Down)"
    on_value:
      - lambda: |-
          ((LgController*)id(${deviceid}))->set_vane_position(4, i);

number:
  - platform: template
    name: "Fan Speed Slow"
    id: fan_speed_slow
    optimistic: true
    icon: mdi:fan-chevron-down
    mode: box
    min_value: 0
    max_value: 255
    step: 1
    on_value:
      then:
        - lambda: |-
            ((LgController*)id(${deviceid}))->set_fan_speed(0, x);    
  - platform: template
    name: "Fan Speed Low"
    id: fan_speed_low
    optimistic: true
    icon: mdi:fan-speed-1
    mode: box
    min_value: 0
    max_value: 255
    step: 1
    on_value:
      then:
        - lambda: |-
            ((LgController*)id(${deviceid}))->set_fan_speed(1, x);    
  - platform: template
    name: "Fan Speed Medium"
    id: fan_speed_medium
    optimistic: true
    icon: mdi:fan-speed-2
    mode: box
    min_value: 0
    max_value: 255
    step: 1
    on_value:
      then:
        - lambda: |-
            ((LgController*)id(${deviceid}))->set_fan_speed(2, x);    
  - platform: template
    name: "Fan Speed High"
    id: fan_speed_high
    optimistic: true
    icon: mdi:fan-speed-3
    mode: box
    min_value: 0
    max_value: 255
    step: 1
    on_value:
      then:
        - lambda: |-
            ((LgController*)id(${deviceid}))->set_fan_speed(3, x);    
  - platform: template
    name: "Sleep Timer (minutes)"
    id: sleep_timer
    optimistic: true
    icon: mdi:timer-outline
    mode: box
    min_value: 0
    max_value: 420
    initial_value: 0
    step: 1
    on_value:
      then:
        - lambda: |-
            ((LgController*)id(${deviceid}))->set_sleep_timer(x);

climate:
  - platform: custom
    lambda: |-
      auto* controller = new LgController(id(ac_serial), id(temperature_sensor), 
                                id(vane_position_1), id(vane_position_2), id(vane_position_3), id(vane_position_4),
                                id(fan_speed_slow), id(fan_speed_low), id(fan_speed_medium), id(fan_speed_high),
                                id(sleep_timer)
                              );
      controller->installer_settings().over_heating = ${over_heating_installer_setting};
      App.register_component(controller);
      return {controller};
    climates:
      - name: ""
        id: ${deviceid}
